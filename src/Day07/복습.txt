[ 배열 ]
1. 정의 : 동일한 자료형(타입) 자료 여러개를 순서대로 저장하는 자료의 타입
2. 특징
    1) 동일한 자료형만 저장 가능 : 서로 다른 자료형 데이터는 같은 배열에 저장이 불가능하다.
    2) 고정 길이 : 배열은 한 번 선언(생성)되면 길이/크기를 수정할 수 없다.
        -> 요소 추가/삭제가 불가능하다.
    3) 요소 기본값 : 배열 내 요소의 초기값이 없으면 자동으로 배정된다.
        - 정수 : 0, 실수 : 0.0, 논리 : false, 객체 : null
    4) index : 배열 내 저장된 요소들의 순서 번호( 0부터 시작 )
3. 사용법
    1) 선언/생성
        (1) new 타입[길이];         int[] 변수명 = new int[3];
        (2) {값1, 값2, 값3};        double[] 변수명 = { 3.14, 5.1, 8.1 };
    2) 호출
        (1) 변수명                         배열의 주소값 반환
        (2) Arrays.toString( 변수명 );     배열 내 요소값들을 문자열로 반환
        (3) 변수명[index]                  index번째 요소값 반환
        (4) 변수명.length                  배열 길이 반환
    3) 배열과 반복문
        (1) 일반 for문     -> 인덱스가 필요하면서 배열을 순회할 때 사용
            for ( int i = 0; i < 배열.length; i++){ }
        (2) 향상된 for문   -> 인덱스가 필요없으면서 배열을 순회할 때 사용
            for ( 타입 반복변수명 : 배열 ){ }

* 자바는 컴파일(번역)을 클래스 단위로 처리한다. *
[ 객체 ]
1. 정의 : 클래스에 기반한 구체적인 실체
2. 사용법
    1) 선언하는 방법
        new 클래스명();         -> 클래스명 변수명 = new 클래스명();
        -> new 연산자 : 클래스 기반으로 새로운 객체를 생성하며 메모리를 할당하는 키워드
    2) 객체 내 멤버변수 호출
        변수명.멤버변수명;
        -> .(접근 연산자) : 객체에 포함된 멤버변수, 메소드 등에 접근할 수 있게하는 키워드
    3) 객체 내 멤버변수 수정
        변수명.멤버변수명 = 새로운 값;
    4) 객체 내 멤버변수 추가/삭제
        -> 불가능 -> 클래스는 컴파일된 이후에 수정이 불가능

[ 클래스 ]
1. 정의 : 객체를 만들기 위한 객체 설계도
2. 구성요소
    1) 멤버변수 : 클래스 내부에서 선언된 변수, 속성/특징/성질, 값/데이터
    2) 메소드   : 클래스의 동작을 정의하는 함수, 이벤트/행위/작동, 실행명령어집합
    3) 생성자   : 객체에 생성될 때 멤버변수를 초기화하는 함수
3. 사용법
    1) 선언하는 방법  -> .java 파일 내 클래스는 1개만 존재하게 만드는 것을 권장한다.
        class 클래스명{
            멤버변수;
            메소드;
            생성자;
        }
4. 목적
    1) 실행 클래스 : main 함수를 갖는 클래스
    2) 설계 클래스 : 객체를 만들기 위한 객체 설계 클래스 (= main 함수를 갖지 않는 클래스)